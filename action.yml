name: "Codex Reviewer"
description: "AI-powered PR review that provides summary, code improvement suggestions, and bug detection as a comment"
author: "P2ACHAI"
branding:
  icon: 'eye'
  color: 'blue'
inputs:
  github_token:
    description: "GitHub token used for posting review comments on PRs"
    required: true
  openai_api_key:
    description: "OpenAI API Key for accessing AI models"
    required: true
  label:
    description: "Label name that triggers the review action (e.g. codex-review)"
    required: true
    default: "codex-review"
  model:
    description: "OpenAI model to use for code review (e.g. o4-mini, gpt-4, etc.)"
    required: false
    default: "o4-mini"
  language:
    description: "Language for the review output (e.g. english, korean, japanese, etc.)"
    required: false
    default: "english"
  custom_prompt:
    description: "Optional custom prompt to override the default review prompt"
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "18"

    - name: Review with Codex
      shell: bash
      env:
        OPENAI_API_KEY: ${{ inputs.openai_api_key }}
      run: |
        echo "Installing Codex"
        npm install -g @openai/codex@latest 

        # Use custom prompt if provided, otherwise use default
        if [ -n "${{ inputs.custom_prompt }}" ]; then
          PROMPT="${{ inputs.custom_prompt }}"
        else
          touch review.md

          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          HEAD_BRANCH="${{ github.event.pull_request.head.ref }}"
          echo "Using pr into ${BASE_BRANCH} from ${HEAD_BRANCH} (PR #${{ github.event.pull_request.number }})"
          git fetch origin "${BASE_BRANCH}:${BASE_BRANCH}"
          git fetch origin "${HEAD_BRANCH}:${HEAD_BRANCH}"
          git diff "${BASE_BRANCH}"..."${HEAD_BRANCH}" > pr.diff
          echo "head -n 50 pr.diff"
          head -n 50 pr.diff

          PROMPT="## IMPORTANT Instructions\nInput: A pr.diff file containing new hunks annotated with line numbers, as well as old hunks representing replaced code, between branch `${BASE_BRANCH}` and `${HEAD_BRANCH}` (PR #${{ github.event.pull_request.number }}). Hunks may include incomplete code fragments.\nTask: Review the code changes using the provided pr.diff file. Focus your review on these changes; however, if additional context is needed to understand or evaluate the changes, you may reference related code such as function or class definitions and their usage in the codebase.\nOutput: Write a review in Markdown format in review.md file in `${{ inputs.language }}` language, specifying exact line number ranges within the new hunks. Review should include 1) Explain what this PR does 2) Code review and suggestions for improvement 3) Detect bugs and potential bugs. Ensure that the start and end line numbers fall within the same hunk; for single-line comments, set start and end to the same line number. Follow the example response format below.\n- Use fenced code blocks with the appropriate language identifier where applicable.  \n- Do not annotate code snippets themselves with line numbers. Ensure code is properly formatted and indented.  \n- Do not use `suggestion` code blocks.  \n- For fix suggestions, use `diff` code blocks, marking removed lines with `-` and added lines with `+`. The line number range specified for comments with fix snippets must exactly match the lines replaced in the new hunk.  \nIf no issues are found within a specified line range, respond with the text `LGTM!` for that range in the review section.\n## Example\n### Example Changes\n---new_hunk---\n```\nz = x / y\nreturn z\n20: def add(x, y):\n21:     z = x + y\n22:     retrn z\n23: \n24: def multiply(x, y):\n25:     return x * y\ndef subtract(x, y):\n\t\tz = x - y\n```\n---old_hunk---\n```\nz = x / y\n\t\treturn z\ndef add(x, y):\n\t\treturn x + y\ndef subtract(x, y):\n\t\tz = x - y\n```\n---comment_chains---\n```\nPlease review this change.\n```\n---end_change_section---\n### Example Response\n22-22:\nThere's a syntax error in the add function.\n```diff\n-    retrn z\n+    return z\n```\n---\n24-25:\nLGTM!\n---\nFinally, write the review to a file named review.md in the language specified by ${{ inputs.language }}."
        fi
        
        
        # Run Codex
        codex -q -a auto-edit --model ${{ inputs.model }} "$PROMPT"
        
        # Print review.md
        echo "cat review.md"
        cat review.md
        
        if [ ! -s review.md ]; then
          echo "Codex failed to generate review in review.md. Creating default message..." 
          echo "## Code Review for PR #${{ github.event.pull_request.number }}" > review.md
          echo "" >> review.md
          echo "Sorry, the automated review system encountered an issue while analyzing this PR." >> review.md
          echo "Please try again by re-applying the label \`${{ inputs.label }}\`." >> review.md
        fi

    - name: Comments on PR
      uses: peter-evans/create-or-update-comment@v3
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ github.event.pull_request.number }}
        body-file: review.md
